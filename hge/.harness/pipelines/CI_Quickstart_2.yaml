pipeline:
    name: CI Quickstart with Triggers
    identifier: CI_Quickstart_2
    properties:
        ci:
            codebase:
                connectorRef: michaelcretzman_github
                build: <+input>
    stages:
        - stage:
              name: Build Test and Push
              identifier: Build_Test_and_Push
              type: CI
              spec:
                  cloneCodebase: true
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: Unit test
                                identifier: wait
                                spec:
                                    connectorRef: DockerHub_Builds
                                    image: golang:1.15
                                    command: |-
                                        go get gotest.tools/gotestsum
                                        gotestsum --format=standard-verbose --junitfile unit-tests.xml || true
                                        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo
                                    privileged: false
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - "*.xml"
                                when:
                                    stageStatus: Success
                                failureStrategies: []
                          - step:
                                type: BuildAndPushDockerRegistry
                                name: Build and Push
                                identifier: Build_and_Push
                                spec:
                                    connectorRef: DockerHub_Builds
                                    repo: cretzman/ciquickstart
                                    tags:
                                        - <+pipeline.sequenceId>
                                    optimize: true
                                when:
                                    stageStatus: Success
                                failureStrategies: []
                          - step:
                                type: Run
                                name: Run Unit Tests
                                identifier: Run_Unit_Tests
                                spec:
                                    connectorRef: DockerHub
                                    image: golang:1.17.2
                                    command: |-
                                        go get gotest.tools/gotestsum
                                        gotestsum --format=standard-verbose --junitfile unit-tests.xml || true
                                        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -tags netgo
                                    privileged: false
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - "*.xml"
                                when:
                                    stageStatus: Success
                                failureStrategies:
                                    - onFailure:
                                          errors:
                                              - AllErrors
                                          action:
                                              type: Ignore
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: docbuilds
                          namespace: default
                          serviceAccountName: ""
              variables: []
        - stage:
              name: Run Integration Test
              identifier: Run_Integration_Test
              type: CI
              spec:
                  cloneCodebase: false
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: test connection to server
                                identifier: test_connection_to_server
                                spec:
                                    connectorRef: DockerHub_Builds
                                    image: curlimages/curl:7.73.0
                                    command: |-
                                        sleep 10
                                        curl localhost:8080
                                        curl localhost:8080?Hello!_I_am_a_nice_demo!
                                    privileged: false
                  infrastructure:
                      useFromStage: Build_Test_and_Push
                  serviceDependencies:
                      - identifier: runhelloworldserver
                        name: run-hello-world-server
                        type: Service
                        spec:
                            connectorRef: DockerHub_Builds
                            image: cretzman/ciquickstart:<+pipeline.sequenceId>
    description: ""
    tags: {}
    projectIdentifier: CD_Examples
    orgIdentifier: default
